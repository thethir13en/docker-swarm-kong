version: "3.7"
services:
  # Database
  kong-database:
    image: postgres:9.6-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER_PASSWD=${POSTGRES_USER_PASSWD}
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_ADDR}:${GRAYLOG_PORT}"
    ports:
      - 5432:5432
    networks:
      - kong-net

  # Kong
  kong:
    image: kong:1.2.1-alpine
    depends_on:
      - kong-database
    restart: unless-stopped
    deploy:
      replicas: 10
      restart_policy:
        condition: on-failure
    environment:
      - KONG-DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=${POSTGRES_DB}
      - KONG_PG_USER=${POSTGRES_USER}
      - KONG_PG_PASSWORD=${POSTGRES_USER_PASSWD}
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_ADMIN_LISTEN_SSL=0.0.0.0:8444
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_ADDR}:${GRAYLOG_PORT}"
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    networks:
      - kong-net

  #Kong migrations
  kong-migration:
    image: kong:1.2.1-alpine
    depends_on:
      - kong-database
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=kong-database
      - KONG_PG_DATABASE=${POSTGRES_DB}
      - KONG_PG_USER=${POSTGRES_USER}
    command: ash -c "sleep 30 && kong migrations bootstrap"
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_ADDR}:${GRAYLOG_PORT}"
    networks:
      - kong-net

  #Konga dashboard
  konga-dashboard:
    image: pantsel/konga
    depends_on:
      - kong
      - konga-mongodb
    restart: unless-stopped
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - NODE_ENV=${ENVIRONMENT}
      - TOKEN_SECRET=${KONG_TOKEN_SECRET}
      - DB_ADAPTER=mongo
      - DB_HOST=konga-mongodb
      - DB_PORT=27017
      - DB_USER=kong
      # - DB_PASSWORD=kong
      # - DB_DATABASE=kong
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_ADDR}:${GRAYLOG_PORT}"
    ports:
      - 1337:1337
    networks:
      - kong-net

  konga-mongodb:
    image: mongo:latest
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - kong-net

  #Monitoring
  cadvisor:
    image: google/cadvisor
    hostname: '{{.Node.Hostname}}'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    logging:
      driver: gelf
      options:
        gelf-address: "udp://${GRAYLOG_ADDR}:${GRAYLOG_PORT}"
    ports:
      - 8080:8080

networks:
  kong-net:

volumes:
  postgres_data:
  mongo_data:
